{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifDks.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifDks","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,UACE,4BAAID,IACF,uBACIQ,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,c,QCJlBG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACQ,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPPK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAcZY,GAdY,4CAAH,sDCMPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GACzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGvB,CAACd,IAEIe,EDXwBK,CAAapB,GAAhCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAEpB,OACI,qCACI,oBAAIlB,UAAU,qCAAd,SACMI,IAGLc,GAAW,mBAAGlB,UAAU,oCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQe,EAAOH,KAAI,SAAAC,GAAG,OAEV,aADA,CACC,EAAD,eAEQA,GADCA,EAAIC,aEpBxBW,EAAS,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,EAElD,EAAoC1C,mBAAS0C,GAA7C,mBAAOC,EAAP,KAAmB5C,EAAnB,KAKA,OACI,qCACI,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWf,KAAI,SAAAR,GAAQ,OAEnB,aADA,CACC,EAAD,CAAwBA,SAAUA,GAApBA,YChBtCwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad37023c.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const CategoryAdd = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n        // console.log('handleInputChange llamado...')\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('handleSubmit llamado...', inputValue);\n\n        if(inputValue.trim().length > 2){\n            // console.log('Submit OK!!!!');\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n          <p>{inputValue}</p>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n            <div className=\"card animate__animated animate__fadeIn\">\n                <img src={url} alt={title} />\n                <p>{title}</p>\n            </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n}\n","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=q7y4K9FJvUYNyZbbnjVHzmcKSg6RXdJG`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    // console.log(data);\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    // console.log(gifs);\n    return gifs;\n}\n","import React, {useState, useEffect} from 'react';\nimport {GifGridItem} from \"./GifGridItem\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\n\nimport PropTypes from 'prop-types';\n\nexport const GifGrid = ({category}) => {\n\n    // Custom Hook\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\" animate__animated animate__fadeIn\">\n                { category }\n            </h3>\n\n            {loading && <p className=\" animate__animated animate__flash\">Loading...</p>}\n\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        // <li key={id}>{title}</li>\n                        <GifGridItem\n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired\n}\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    },[category])\n\n    return state; // { data: [], loading: true };\n}\n","import React, {useState} from 'react';\nimport {CategoryAdd} from \"./components/CategoryAdd\";\nimport {GifGrid} from \"./components/GifGrid\";\n\nexport const GifDks = ({ defaultCategories = [] }) => {\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(defaultCategories);\n    // const handleAdd = () => {\n        // setCategories([...categories, 'HunterXHunter']);\n        // setCategories(cats => [...cats, 'HunterXHunter']);\n    // }\n    return(\n        <>\n            <h2>GifDKS</h2>\n            <CategoryAdd setCategories={setCategories}/>\n            <hr />\n            {/*<button onClick={handleAdd}>Add(+)</button>*/}\n            <ol>\n                {\n                    categories.map(category => (\n                        // return <li key={category}> {category} </li>\n                        <GifGrid key={category} category={category}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifDks} from \"./GifDks\";\n\nReactDOM.render(\n    <GifDks />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}